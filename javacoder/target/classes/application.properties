# Server Configuration
server.port=8080

# Database Configuration (MySQL)
spring.datasource.url=jdbc:mysql://localhost:3306/javacoder?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=87460104Enes*
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=false

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Logging Configuration
logging.level.com.example.javacoder=INFO
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Code Execution Configuration
code.execution.timeout=10000
code.execution.max-source-length=10000
code.execution.max-input-length=1000

# Cache Configuration
spring.cache.type=caffeine
spring.cache.cache-names=supportedLanguages,executionStats,codeResults

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin123

# Privacy/Security
# Provide a secret salt for hashing user identifiers like IPs
# Change this in production and keep it secret (e.g., via env var)
privacy.hash.salt=${PRIVACY_HASH_SALT:}

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Rate Limiting
rate.limit.requests-per-minute=100
